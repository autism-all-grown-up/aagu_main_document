set_table_properties(layout = "autofit")
}
# Adjustments for DOCX
if (!is.null(output_format) && output_format == "docx") {
ft <- ft %>%
width(j = 1, width = 2.5, unit = "in") %>%
width(j = 2, width = 2.5, unit = "in") %>%
width(j = 3, width = 2.5, unit = "in") %>%
width(j = 4, width = 2.5, unit = "in") %>%
set_table_properties(layout = "fixed")
}
# Default for interactive sessions
if (is.null(output_format)) {
ft <- ft %>%
width(j = 1, width = 2.5, unit = "in") %>%
width(j = 2, width = 2.5, unit = "in") %>%
width(j = 3, width = 2.5, unit = "in") %>%
width(j = 4, width = 2.5, unit = "in")
}
library(tidyverse)
# source("print_fte_table.R")
# source("print_budget_table.R")
# library(googlesheets4)
# sheet_url = "https://docs.google.com/spreadsheets/d/1tDWDwJANCWrrx1dn4g40qG0ejlE5WFwfOb9HnWsCmto/edit?usp=sharing"
# data = read_sheet(sheet_url, sheet = "Jobs Data")
data =
read_csv('aagu_main_document/jobs_data.csv')
#| warning: false
#| message: false
#| echo: false
#| output: asis
for (phase in c("seed", "sprout", "grow"))
{
cat(str_glue("## {str_to_title(phase)}\n\n"))
cat("### Staffing\n")
ft_staffing <-
data %>%
filter(Phase == "sprout") %>%
arrange(FTE) %>%
select(Responsibility, FTE, Description) %>%
printFteTable()
flextable_to_rmd(ft_staffing)
cat("### Labor Cost\n")
ft_budget <-
data %>%
filter(Phase == "sprout") %>%
arrange(FTE) %>%
select(Responsibility, FTE, Rate) %>%
printBudgetTable()
flextable_to_rmd(ft_budget)
cat("\n\n")
}
knitr::opts_knit$get("rmarkdown.pandoc.to")
?flextable_to_rmd
knitr::opts_knit$get("rmarkdown.pandoc.to")
library(tidyverse)
library(flextable)
library(dplyr)
library(officer)
library(scales)
printFteTable <- function(data) {
# Calculate the total FTE
total_fte <- sum(data$FTE, na.rm = TRUE)
# Add the total row
total_row <- data.frame(
Responsibility = "Total",
FTE = total_fte,
Description = ""
)
# Combine the original data with the total row
final_data <- bind_rows(data, total_row)
# Define border style
border_style <- fp_border(color = "black", width = 1)
bottom_border_style <- fp_border(color = "black", width = 2)
no_border_style <- fp_border(color = "white", width = 0)
# Create flextable
ft <- flextable(final_data) %>%
# Style header
bold(part = "header") %>%
fontsize(part = "header", size = 12) %>%
font(part = "header", fontname = "Times") %>%
bg(part = "header", bg = "grey") %>%
# Style body
bold(j = ~ Responsibility, part = "body") %>%
font(j = ~ Responsibility, fontname = "Arial", part = "body") %>%
font(j = ~ -Responsibility, fontname = "Arial", part = "body") %>%
fontsize(part = "body", size = 10) %>%
align(j = c("FTE", "Description"), align = "left", part = "body") %>%
align(j = c("FTE", "Description"), align = "left", part = "header") %>%
# Bold total row
bold(i = nrow(final_data), part = "body") %>%
# Borders
border_outer(border = border_style) %>%
border_inner_h(border = border_style) %>%
border_inner_v(border = border_style) %>%
hline_bottom(border = bottom_border_style) %>%
hline(i = nrow(final_data), border = bottom_border_style) %>%
# Autofit columns
autofit()
return(ft)
}
printBudgetTable <- function(data) {
data <- data %>%
mutate(
Weekly_Total = FTE * Rate * 40,
Overhead = Weekly_Total * 0.1
)
colnames(data) <- c("Responsibility", "FTE", "Rate", "Weekly Total", "Overhead")
# Adding subtotal and total rows
subtotal <- data %>%
summarize(
Responsibility = "Subtotal per week",
FTE = NA,
Rate = NA,
`Weekly Total` = sum(`Weekly Total`),
Overhead = sum(Overhead)
)
total_per_week <- subtotal %>%
mutate(Responsibility = "Total per week", `Weekly Total` = sum(`Weekly Total`), Overhead = sum(Overhead))
total_for_8_weeks <- total_per_week %>%
mutate(Responsibility = "Total for 8 weeks", `Weekly Total` = 8 * `Weekly Total`, Overhead = NA)
# Combine all data with "Totals" row before the subtotals
final_data <- bind_rows(
data,
data.frame(Responsibility = "Totals", FTE = NA, Rate = NA, `Weekly Total` = NA, Overhead = NA),
subtotal,
total_per_week,
total_for_8_weeks
)
# Define border style
border_style <- fp_border(color = "black", width = 1)
bottom_border_style <- fp_border(color = "black", width = 2)
no_border_style <- fp_border(color = "white", width = 0)
# Create flextable
ft <- flextable(final_data) %>%
# Style header
bold(part = "header") %>%
fontsize(part = "header", size = 12) %>%
font(part = "header", fontname = "Times") %>%
bg(part = "header", bg = "grey") %>%
# Style body
bold(j = ~ Responsibility, part = "body") %>%
font(j = ~ Responsibility, fontname = "Arial", part = "body") %>%
font(j = ~ -Responsibility, fontname = "Arial", part = "body") %>%
fontsize(part = "body", size = 10) %>%
align(
j = c("FTE", "Rate", "Weekly Total", "Overhead"),
align = "right",
part = "body"
) %>%
align(
j = c("FTE", "Rate", "Weekly Total", "Overhead"),
align = "right",
part = "header"
) %>%
# Borders
border_outer(border = border_style) %>%
border_inner_h(border = border_style) %>%
border_inner_v(border = border_style) %>%
hline_bottom(border = bottom_border_style) %>%
hline(i = nrow(final_data) - 3, border = bottom_border_style) %>%
hline(i = nrow(final_data) - 2, border = bottom_border_style) %>%
hline(i = nrow(final_data) - 1, border = bottom_border_style) %>%
hline(i = nrow(final_data), border = bottom_border_style) %>%
# Style custom row
bg(i = nrow(data) + 1, bg = "lightgrey", part = "body") %>%
border(i = nrow(data) + 1, border.top = no_border_style, border.bottom = no_border_style, border.left = no_border_style, border.right = no_border_style, part = "body") %>%
# Autofit columns
autofit()
# Detect output format
# output_format <- knitr::opts_knit$get("rmarkdown.pandoc.to")
# # Adjustments for HTML
# if (!is.null(output_format) && output_format == "html") {
#   ft <- ft %>%
#     width(j = 1, width = 2.5, unit = "in") %>%
#     width(j = 2, width = 2.5, unit = "in") %>%
#     width(j = 3, width = 2.5, unit = "in")
# }
#
# # Adjustments for PDF
# if (!is.null(output_format) && output_format == "latex") {
#   ft <- ft %>%
#     width(j = 1, width = 2.5, unit = "in") %>%
#     width(j = 2, width = 2.5, unit = "in") %>%
#     width(j = 3, width = 2.5, unit = "in") %>%
#     width(j = 4, width = 2.5, unit = "in") %>%
#     set_table_properties(layout = "autofit")
# }
#
# # Adjustments for DOCX
# if (!is.null(output_format) && output_format == "docx") {
#   ft <- ft %>%
#     width(j = 1, width = 2.5, unit = "in") %>%
#     width(j = 2, width = 2.5, unit = "in") %>%
#     width(j = 3, width = 2.5, unit = "in") %>%
#     width(j = 4, width = 2.5, unit = "in") %>%
#     set_table_properties(layout = "fixed")
# }
#
# # Default for interactive sessions
# if (is.null(output_format)) {
#   ft <- ft %>%
#     width(j = 1, width = 2.5, unit = "in") %>%
#     width(j = 2, width = 2.5, unit = "in") %>%
#     width(j = 3, width = 2.5, unit = "in") %>%
#     width(j = 4, width = 2.5, unit = "in")
# }
}
library(tidyverse)
data =
read_csv('aagu_main_document/jobs_data.csv')
#| warning: false
#| message: false
#| echo: false
#| output: asis
for (phase in c("seed", "sprout", "grow"))
{
cat(str_glue("## {str_to_title(phase)}\n\n"))
print(knitr::opts_knit$get("rmarkdown.pandoc.to"))
cat("### Staffing\n")
ft_staffing <-
data %>%
filter(Phase == "sprout") %>%
arrange(FTE) %>%
select(Responsibility, FTE, Description) %>%
printFteTable()
# flextable_to_rmd(ft_staffing)
cat("### Labor Cost\n")
ft_budget <-
data %>%
filter(Phase == "sprout") %>%
arrange(FTE) %>%
select(Responsibility, FTE, Rate) %>%
printBudgetTable()
# flextable_to_rmd(ft_budget)
cat("\n\n")
}
library(tidyverse)
library(flextable)
library(dplyr)
library(officer)
library(scales)
printFteTable <- function(data) {
# Calculate the total FTE
total_fte <- sum(data$FTE, na.rm = TRUE)
# Add the total row
total_row <- data.frame(
Responsibility = "Total",
FTE = total_fte,
Description = ""
)
# Combine the original data with the total row
final_data <- bind_rows(data, total_row)
# Define border style
border_style <- fp_border(color = "black", width = 1)
bottom_border_style <- fp_border(color = "black", width = 2)
no_border_style <- fp_border(color = "white", width = 0)
# Create flextable
ft <- flextable(final_data) %>%
# Style header
bold(part = "header") %>%
fontsize(part = "header", size = 12) %>%
font(part = "header", fontname = "Times") %>%
bg(part = "header", bg = "grey") %>%
# Style body
bold(j = ~ Responsibility, part = "body") %>%
font(j = ~ Responsibility, fontname = "Arial", part = "body") %>%
font(j = ~ -Responsibility, fontname = "Arial", part = "body") %>%
fontsize(part = "body", size = 10) %>%
align(j = c("FTE", "Description"), align = "left", part = "body") %>%
align(j = c("FTE", "Description"), align = "left", part = "header") %>%
# Bold total row
bold(i = nrow(final_data), part = "body") %>%
# Borders
border_outer(border = border_style) %>%
border_inner_h(border = border_style) %>%
border_inner_v(border = border_style) %>%
hline_bottom(border = bottom_border_style) %>%
hline(i = nrow(final_data), border = bottom_border_style) %>%
# Autofit columns
autofit()
return(ft)
}
printBudgetTable <- function(data) {
data <- data %>%
mutate(
Weekly_Total = FTE * Rate * 40,
Overhead = Weekly_Total * 0.1
)
colnames(data) <- c("Responsibility", "FTE", "Rate", "Weekly Total", "Overhead")
# Adding subtotal and total rows
subtotal <- data %>%
summarize(
Responsibility = "Subtotal per week",
FTE = NA,
Rate = NA,
`Weekly Total` = sum(`Weekly Total`),
Overhead = sum(Overhead)
)
total_per_week <- subtotal %>%
mutate(Responsibility = "Total per week", `Weekly Total` = sum(`Weekly Total`), Overhead = sum(Overhead))
total_for_8_weeks <- total_per_week %>%
mutate(Responsibility = "Total for 8 weeks", `Weekly Total` = 8 * `Weekly Total`, Overhead = NA)
# Combine all data with "Totals" row before the subtotals
final_data <- bind_rows(
data,
data.frame(Responsibility = "Totals", FTE = NA, Rate = NA, `Weekly Total` = NA, Overhead = NA),
subtotal,
total_per_week,
total_for_8_weeks
)
# Define border style
border_style <- fp_border(color = "black", width = 1)
bottom_border_style <- fp_border(color = "black", width = 2)
no_border_style <- fp_border(color = "white", width = 0)
# Create flextable
ft <- flextable(final_data) %>%
# Style header
bold(part = "header") %>%
fontsize(part = "header", size = 12) %>%
font(part = "header", fontname = "Times") %>%
bg(part = "header", bg = "grey") %>%
# Style body
bold(j = ~ Responsibility, part = "body") %>%
font(j = ~ Responsibility, fontname = "Arial", part = "body") %>%
font(j = ~ -Responsibility, fontname = "Arial", part = "body") %>%
fontsize(part = "body", size = 10) %>%
align(
j = c("FTE", "Rate", "Weekly Total", "Overhead"),
align = "right",
part = "body"
) %>%
align(
j = c("FTE", "Rate", "Weekly Total", "Overhead"),
align = "right",
part = "header"
) %>%
# Borders
border_outer(border = border_style) %>%
border_inner_h(border = border_style) %>%
border_inner_v(border = border_style) %>%
hline_bottom(border = bottom_border_style) %>%
hline(i = nrow(final_data) - 3, border = bottom_border_style) %>%
hline(i = nrow(final_data) - 2, border = bottom_border_style) %>%
hline(i = nrow(final_data) - 1, border = bottom_border_style) %>%
hline(i = nrow(final_data), border = bottom_border_style) %>%
# Style custom row
bg(i = nrow(data) + 1, bg = "lightgrey", part = "body") %>%
border(i = nrow(data) + 1, border.top = no_border_style, border.bottom = no_border_style, border.left = no_border_style, border.right = no_border_style, part = "body") %>%
# Autofit columns
autofit()
# Detect output format
# output_format <- knitr::opts_knit$get("rmarkdown.pandoc.to")
# # Adjustments for HTML
# if (!is.null(output_format) && output_format == "html") {
#   ft <- ft %>%
#     width(j = 1, width = 2.5, unit = "in") %>%
#     width(j = 2, width = 2.5, unit = "in") %>%
#     width(j = 3, width = 2.5, unit = "in")
# }
#
# # Adjustments for PDF
# if (!is.null(output_format) && output_format == "latex") {
#   ft <- ft %>%
#     width(j = 1, width = 2.5, unit = "in") %>%
#     width(j = 2, width = 2.5, unit = "in") %>%
#     width(j = 3, width = 2.5, unit = "in") %>%
#     width(j = 4, width = 2.5, unit = "in") %>%
#     set_table_properties(layout = "autofit")
# }
#
# # Adjustments for DOCX
# if (!is.null(output_format) && output_format == "docx") {
#   ft <- ft %>%
#     width(j = 1, width = 2.5, unit = "in") %>%
#     width(j = 2, width = 2.5, unit = "in") %>%
#     width(j = 3, width = 2.5, unit = "in") %>%
#     width(j = 4, width = 2.5, unit = "in") %>%
#     set_table_properties(layout = "fixed")
# }
#
# # Default for interactive sessions
# if (is.null(output_format)) {
#   ft <- ft %>%
#     width(j = 1, width = 2.5, unit = "in") %>%
#     width(j = 2, width = 2.5, unit = "in") %>%
#     width(j = 3, width = 2.5, unit = "in") %>%
#     width(j = 4, width = 2.5, unit = "in")
# }
}
library(tidyverse)
source('aagu_main_document/print_fte_table.R')
source('aagu_main_document/print_budget_table.R')
data =
read_csv('aagu_main_document/jobs_data.csv')
#| warning: false
#| message: false
#| echo: false
#| output: asis
for (phase in c("seed", "sprout", "grow"))
{
cat(str_glue("## {str_to_title(phase)}\n\n"))
output_format = knitr::opts_knit$get("rmarkdown.pandoc.to")
cat("### Staffing\n")
ft_staffing <-
data %>%
filter(Phase == "sprout") %>%
arrange(FTE) %>%
select(Responsibility, FTE, Description) %>%
printFteTable(output_format=output_format)
flextable_to_rmd(ft_staffing)
cat("### Labor Cost\n")
ft_budget <-
data %>%
filter(Phase == "sprout") %>%
arrange(FTE) %>%
select(Responsibility, FTE, Rate) %>%
printBudgetTable(output_format=output_format)
flextable_to_rmd(ft_budget)
cat("\n\n")
}
library(tidyverse)
source('aagu_main_document/print_fte_table.R')
source('aagu_main_document/print_budget_table.R')
data =
read_csv('aagu_main_document/jobs_data.csv')
#| warning: false
#| message: false
#| echo: false
#| output: asis
for (phase in c("seed", "sprout", "grow"))
{
cat(str_glue("## {str_to_title(phase)}\n\n"))
output_format = knitr::opts_knit$get("rmarkdown.pandoc.to")
cat("### Staffing\n")
ft_staffing <-
data %>%
filter(Phase == "sprout") %>%
arrange(FTE) %>%
select(Responsibility, FTE, Description) %>%
printFteTable(output_format=output_format)
flextable_to_rmd(ft_staffing)
cat("### Labor Cost\n")
ft_budget <-
data %>%
filter(Phase == "sprout") %>%
arrange(FTE) %>%
select(Responsibility, FTE, Rate) %>%
printBudgetTable(output_format=output_format)
flextable_to_rmd(ft_budget)
cat("\n\n")
}
library(tidyverse)
source('aagu_main_document/print_fte_table.R')
source('aagu_main_document/print_budget_table.R')
data =
read_csv('aagu_main_document/jobs_data.csv')
#| warning: false
#| message: false
#| echo: false
#| output: asis
for (phase in c("seed", "sprout", "grow"))
{
cat(str_glue("## {str_to_title(phase)}\n\n"))
output_format = knitr::opts_knit$get("rmarkdown.pandoc.to")
cat("### Staffing\n")
ft_staffing <-
data %>%
filter(Phase == "sprout") %>%
arrange(FTE) %>%
select(Responsibility, FTE, Description) %>%
printFteTable(output_format=output_format)
flextable_to_rmd(ft_staffing)
cat("### Labor Cost\n")
ft_budget <-
data %>%
filter(Phase == "sprout") %>%
arrange(FTE) %>%
select(Responsibility, FTE, Rate) %>%
printBudgetTable(output_format=output_format)
flextable_to_rmd(ft_budget)
cat("\n\n")
}
source("//wsl.localhost/Ubuntu/home/balter/aagu_main_document/print_budget_table.R", echo=TRUE)
source("//wsl.localhost/Ubuntu/home/balter/aagu_main_document/print_fte_table.R", echo=TRUE)
output_format = knitr::opts_knit$get("rmarkdown.pandoc.to")
#| warning: false
#| message: false
#| echo: false
#| output: asis
for (phase in c("seed", "sprout", "grow"))
{
cat(str_glue("## {str_to_title(phase)}\n\n"))
output_format = knitr::opts_knit$get("rmarkdown.pandoc.to")
cat("### Staffing\n")
ft_staffing <-
data %>%
filter(Phase == "sprout") %>%
arrange(FTE) %>%
select(Responsibility, FTE, Description) %>%
printFteTable(output_format=output_format)
flextable_to_rmd(ft_staffing)
cat("### Labor Cost\n")
ft_budget <-
data %>%
filter(Phase == "sprout") %>%
arrange(FTE) %>%
select(Responsibility, FTE, Rate) %>%
printBudgetTable(output_format=output_format)
flextable_to_rmd(ft_budget)
cat("\n\n")
}
